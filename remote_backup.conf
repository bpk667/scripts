
# Max. Bandwidth
BW=45m

#### Fail checks ####
# If local and remote size differs more than 10%, backup is ABORTED.
diff_allowed=10
# If local or remote folder size is less than 1TB, backup is ABORTED.
min_size=1000000

# Email address
address=root

encfs_pwd=XXXXXXXXXXXXXXXXXXXXXXXX

#backup from remote to localhost
declare -A bck_r2l
bck_r2l[remote_host]=remotehost.com
bck_r2l[remote_path]=/mnt/nfs/data_host2/
bck_r2l[local_path]=/mnt/bck_host2/
bck_r2l[exclusions]=/mnt/nfs/data_host2/excluded/

#backup from localhost to remote
declare -A bck_l2r
bck_l2r[remote_host]=remotehost.com
bck_l2r[remote_path]=/mnt/nfs/bck_host1_encrypted/
bck_l2r[local_path]=/mnt/data_host1_encrypted/
bck_l2r[local_unencrypted]=/mnt/data_host1/
bck_l2r[exclusions]=/mnt/nfs/data_host1_encrypted/excluded/ Â # Useless with encrypted paths. Kept for simplicity

ENCFS6_CONFIG="${bck_l2r[local_unencrypted]}.encfs6.xml"

# DATA RECOVERY
: <<"RECOVERY"

tmpsshfs=/tmp/sshfs
tmp_decrypt=/tmp/decrypted
mkdir -p ${tmpsshfs} ${tmp_decrypt}

# mount remote folder
sshfs ${bck_l2r[remote_host]}:${bck_l2r[remote_path]} ${tmpsshfs}  -o idmap=user -o uid=`id -u` -o gid=`id -g` -o reconnect
# Decrypt folder
echo "${encfs_pwd}" | encfs -c $ENCFS6_CONFIG -S ${tmpsshfs} ${tmp_decrypt}

# Umount temporary folders
echo encfs -u ${tmp_decrypt}
echo fusermount -u ${tmpsshfs}
exit

RECOVERY


